/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.intercom;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;

import io.intercom.android.sdk.Intercom;
import io.intercom.android.sdk.UserAttributes;
import io.intercom.android.sdk.identity.Registration;

@Kroll.module(name="TitaniumIntercom", id="ti.intercom")
public class TitaniumIntercomModule extends KrollModule {

	@Kroll.method
	public void configure(KrollDict params) {
		String apiKey = params.getString("apiKey");
		String appId = params.getString("appId");

		Intercom.initialize(TiApplication.getAppRootOrCurrentActivity().getApplication(), apiKey, appId);
	}

	@Kroll.setProperty
	public void setVisible(boolean visible) {
		Intercom.client().setLauncherVisibility(visible ? Intercom.Visibility.VISIBLE : Intercom.Visibility.GONE);
	}

	@Kroll.method
	public void registerUser(KrollDict user) {
		if (user == null) {
			Intercom.client().registerUnidentifiedUser();
			return;
		}

		String userId = user.getString("identifier");
		String email = user.getString("email");
		Registration userRegistration = Registration.create().withUserId(userId);

		if (email != null) {
			userRegistration = userRegistration.withEmail(email);
		}

		Intercom.client().registerIdentifiedUser(userRegistration);
	}

	@Kroll.method
    public void updateUser(KrollDict user) {
		String email = user.getString("email");
		String name = user.getString("name");

		UserAttributes.Builder userAttributes = new UserAttributes.Builder();

		if (email != null) {
			userAttributes = userAttributes.withEmail(email);
		}

		if (name != null) {
			userAttributes = userAttributes.withName(name);
		}

		Intercom.client().updateUser(userAttributes.build());
	}

	@Kroll.method
	public void logout() {
		Intercom.client().logout();
	}

	@Kroll.method
	public void presentMessenger() {
		Intercom.client().displayMessageComposer();
	}
}

